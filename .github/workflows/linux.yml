name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: Run unit-tests on rust crates ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-test-cache-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: ./scripts/install-ubuntu-dependencies.sh
      - name: Install uniffi bindgen
        run: cargo install --force uniffi_bindgen
      - name: Test
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          cargo tarpaulin --verbose --workspace \
              --coveralls $COVERALLS_TOKEN
              --features story \
              --exclude augmented-ui \
              --exclude audiounit \
              --exclude example-iced-xcode-integration \
              --exclude avfaudio-sys \
              --exclude recording_buddy \
              --exclude darwin-webkit \
              --exclude webview-holder \
              --exclude macos-bundle-resources
  build-rust:
    name: Build release rust crates ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-release-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Install dependencies
      run: ./scripts/install-ubuntu-dependencies.sh
    - name: Install uniffi bindgen
      run: cargo install --force uniffi_bindgen
    - name: Build release
      run: |
        cargo build --release --verbose --workspace \
            --exclude augmented-ui \
            --exclude audiounit \
            --exclude example-iced-xcode-integration \
            --exclude avfaudio-sys \
            --exclude recording_buddy \
            --exclude darwin-webkit \
            --exclude macos-bundle-resources
    - name: Upload plugin-host binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host
        path: ./target/release/plugin-host
    - name: Upload plugin-host-gui2 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-plugin-host-gui2
        path: ./target/release/plugin-host-gui2
    - name: Upload tremolo-plugin dylib
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-libtas_v2-dylib
        path: ./target/release/libtas_v2.dylib

